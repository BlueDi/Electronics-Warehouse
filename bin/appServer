#!/usr/bin/env node

import 'make-promises-safe';
import http from 'http';
import app from '@app';
import { ENV, DEV } from '@config';

const server = http.createServer(app);
const serverPort = process.env.PORT || ENV['PORT'];

server.listen(serverPort);

server.on('listening', () => {
  console.info(`App server is listening PORT: ${serverPort}`);

  if (DEV) {
    console.log(`App is started at: http://localhost:${serverPort}`);
  }
});

server.on('error', err => {
  switch (err.code) {
    case 'EACCES':
      console.error('Not enough privileges to run app server.');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(`${serverPort} is already in use.`);
      process.exit(1);
      break;
    default:
      throw err;
  }
});

['SIGINT', 'SIGTERM'].forEach(signal => {
  process.on(signal, () => {
    server.close(() => process.exit(0));
  });
});
